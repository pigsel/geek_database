-- домашнее задание к уроку 5
-- автор - Игорь Бертяев


-- Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”

-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. 
-- Заполните их текущими датой и временем.
-- > тут достаточно просто:
UPDATE users SET created_at = NOW(), updated_at = NOW();


-- 2. Таблица users была неудачно спроектирована. 
-- Записи created_at и updated_at были заданы типом VARCHAR 
-- и в них долгое время помещались значения в формате "20.10.2017 8:10".
-- Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.
-- > вот как я делал:
mysql> UPDATE users SET created_at = STR_TO_DATE(created_at, '%d.%m.%Y %k:%i');
Query OK, 6 rows affected (0.01 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> UPDATE users SET updated_at = STR_TO_DATE(updated_at, '%d.%m.%Y %k:%i');
Query OK, 6 rows affected (0.02 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> ALTER TABLE users MODIFY created_at DATETIME;
Query OK, 6 rows affected (0.23 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM users;
+----+--------------------+-------------+---------------------+---------------------+
| id | name               | birthday_at | created_at          | updated_at          |
+----+--------------------+-------------+---------------------+---------------------+
|  1 | Геннадий           | 1990-10-05  | 2017-10-20 08:10:00 | 2017-10-20 08:10:00 |
|  2 | Наталья            | 1984-11-12  | 2017-10-20 08:10:00 | 2017-10-20 08:10:00 |
|  3 | Александр          | 1985-05-20  | 2017-10-20 08:10:00 | 2017-10-20 08:10:00 |
|  4 | Сергей             | 1988-02-14  | 2017-10-20 08:10:00 | 2017-10-20 08:10:00 |
|  5 | Иван               | 1998-01-12  | 2017-10-20 08:10:00 | 2017-10-20 08:10:00 |
|  6 | Мария              | 1992-08-29  | 2017-10-20 08:10:00 | 2017-10-20 08:10:00 |
+----+--------------------+-------------+---------------------+---------------------+
6 rows in set (0.00 sec)


-- 3. В таблице складских запасов storehouses_products в поле value могут встречаться 
-- самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы.
-- Необходимо отсортировать записи таким образом, чтобы они выводились в порядке
-- увеличения значения value. Однако, нулевые запасы должны выводиться в конце, 
-- после всех записей.
-- > выполняю:
-- сначала заполню таблицу
mysql> INSERT INTO storehouses_products (storehouse_id, product_id, value) VALUES
    ->   (1, 1, 0),
    ->   (1, 2, 10),
    ->   (6, 2, 5),
    ->   (1, 3, 55),
    ->   (2, 4, 0),
    ->   (2, 8, 7),
    ->   (4, 17, 1230),
    ->   (1, 55, 128),
    ->   (8, 3, 0);
Query OK, 9 rows affected (0.01 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from storehouses_products;
+----+---------------+------------+-------+---------------------+---------------------+
| id | storehouse_id | product_id | value | created_at          | updated_at          |
+----+---------------+------------+-------+---------------------+---------------------+
|  1 |             1 |          1 |     0 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  2 |             1 |          2 |    10 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  3 |             6 |          2 |     5 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  4 |             1 |          3 |    55 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  5 |             2 |          4 |     0 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  6 |             2 |          8 |     7 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  7 |             4 |         17 |  1230 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  8 |             1 |         55 |   128 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
|  9 |             8 |          3 |     0 | 2019-09-22 13:21:04 | 2019-09-22 13:21:04 |
+----+---------------+------------+-------+---------------------+---------------------+
9 rows in set (0.00 sec)

-- далее сама выборка:
mysql> SELECT value FROM storehouses_products ORDER BY value=0, value ASC;
+-------+
| value |
+-------+
|     5 |
|     7 |
|    10 |
|    55 |
|   128 |
|  1230 |
|     0 |
|     0 |
|     0 |
+-------+
9 rows in set (0.00 sec)


-- Практическое задание теме “Агрегация данных”

-- 1. Подсчитайте средний возраст пользователей в таблице users
-- > делал так:
mysql> SELECT avg(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) FROM users;
+----------------------------------------------+
| avg(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) |
+----------------------------------------------+
|                                      29.1667 |
+----------------------------------------------+
1 row in set (0.00 sec)


-- 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели.
-- Следует учесть, что необходимы дни недели текущего года, а не года рождения.
-- > мой вариант:
mysql> SELECT name, 
DAYOFWEEK(DATE_ADD(birthday_at, INTERVAL TIMESTAMPDIFF(YEAR, birthday_at, NOW()) YEAR)) AS bdw 
FROM users;
+--------------------+------+
| name               | bdw  |
+--------------------+------+
| Геннадий           |    6 |
| Наталья            |    2 |
| Александр          |    2 |
| Сергей             |    5 |
| Иван               |    7 |
| Мария              |    5 |
+--------------------+------+
6 rows in set (0.01 sec)


-- на этом заканчиваю, спасибо